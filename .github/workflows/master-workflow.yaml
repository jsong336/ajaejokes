name: master CI/CD workflow 
on: 
  push: 
    branches:
      # - master
      - feat/implement-ci-cd-pipeline
  pull_request:

env:
  POETRY_VERSION: 1.5.1
  PYTHON_VERSION: '3.10'
jobs:
  release:
    runs-on: ubuntu-latest 
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - id: setup-python
        name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      
      - name: Cache poetry install
        uses: actions/cache@v2
        with:
          path: ~/.local
          key: poetry-${{ env.POETRY_VERSION }}-0
      
      - name: Setup Poetry
        uses: snok/install-poetry@v1
        with:
          version: ${{ env.POETRY_VERSION }}
          virtualenvs-create: true
          virtualenvs-in-project: true
      
      - id: cache-python-dependencies
        name: Cache Python Dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('*/poetry.lock') }}
          
      - run: poetry install --no-interaction --no-root
        if: steps.cache-python-dependencies.outputs.cache-hit != 'true'
      
      - run: poetry run pytest
      

        
  
